#
# Rebuild and publish our base Docker images for OCaml once a week.
#

version: 2.1

executors:
  amd64:
    machine:
      image: ubuntu-2204:2022.07.1
    resource_class: xlarge
  arm64:
    machine:
      image: ubuntu-2204:2022.07.1
    resource_class: arm.xlarge

jobs:
  push-multi-arch:
    machine:
      image: ubuntu-2204:2022.07.1
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Load images
          command: |
            ls -la /tmp/workspace
            archives="/tmp/workspace/image-*.tar"
            for archive in $archives; do
              echo "Loading ${archive}..."
              docker load -i $archive
            done
      - run:
          name: Create and push multi-arch manifest
          command: |
            images=$(cat /tmp/workspace/digests-* | cut -f1 | sort | uniq)
            echo "images: $images"
            for image in $images; do
              echo $image
              manifest_args=()
              for digest in $(grep $image /tmp/workspace/digests-* | cut -f2); do
                echo " -> ${digest}"
                manifest_args+=( --amend $digest )
              done
              docker manifest create $image $manifest_args
            done

  build-and-save:
    parameters:
      architecture:
        type: executor
    executor: << parameters.architecture >>
    steps:
      - checkout
      - run:
          name: Build
          command: make build
      - run:
          name: Save images
          command: |
            arch=$(docker info -f '{{ .Architecture }}')
            digests="digests-${arch}"
            rm -f $digests
            for image in $(cat pushme); do
              echo "${image}\t$(docker image inspect -f '{{ .Id }}' ${image})" >> $digests
            done
            docker save -o images-$arch.tar $(cat pushme)
      - persist_to_workspace:
          root: .
          paths:
            - images-*.tar
            - digests-*

  build-only:
    parameters:
      architecture:
        type: executor
    executor: << parameters.architecture >>
    steps:
      - checkout
      - run:
          name: Build
          command: make build

workflows:
  version: 2

  build-on-pr:
    jobs:
      - build-and-save:
          matrix:
            parameters:
              architecture: [amd64, arm64]
      - push-multi-arch:
          requires: [build-and-save]

  # build-and-push-on-master-push:
  #   jobs:
  #     - build-and-push:
  #         matrix:
  #           parameters:
  #             architecture: [amd64, arm64]
  #         filters:
  #           branches:
  #             only:
  #               - master

  # build-and-push-weekly:
  #   # Rebuild periodically rather than based on git changes.
  #   triggers:
  #     - schedule:
  #         # Run at 07:00 every Thursday, UTC.
  #         cron: "0 07 * * 4"
  #         filters:
  #           branches:
  #             only:
  #               - master
  #               - main

  #   jobs:
  #     - build-and-push:
  #         matrix:
  #           parameters:
  #             architecture: [amd64, arm64]
  #         # Run only on these branches (each pushing different images)
  #         filters:
  #           branches:
  #             only:
  #               - master
  #               - main
